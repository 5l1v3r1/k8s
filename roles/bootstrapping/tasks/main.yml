- name: "拷贝bootstrap-token文件"
  copy:
    src: "{{ ssl_dir }}/token"
    dest: "/etc/kubernetes/pki/token"
- name: "等待apiserver启动成功"
  wait_for:
    port: 6443
    delay: 3
  vars: ansible_connection: local
- name: "读取当前bootstrap-token-id"
  shell: cat /etc/kubernetes/pki/token | grep -v "^#" | awk -F '.' '{print $1}'
  register: token_id
- name: "读取当前bootstrap-token-secret"
  shell: cat /etc/kubernetes/pki/token | grep -v "^#" | awk -F '.' '{print $2}'
  register: token_secret
#- name: "授予kube-apiserver访问kubelet API权限"
#  shell: kubectl create clusterrolebinding kube-apiserver:kubelet-apis --clusterrole=system:kubelet-api-admin --user kubernetes
- name: "创建bootstrap-token secret"
  shell: kubectl -n kube-system create secret generic bootstrap-token-{{ token_id.stdout }} --type 'bootstrap.kubernetes.io/token' --from-literal description="cluster bootstrap token" --from-literal token-id={{ token_id.stdout }} --from-literal token-secret={{ token_secret.stdout }} --from-literal usage-bootstrap-authentication=true --from-literal usage-bootstrap-signing=true
- name: "绑定group system:bootstrappers 和 clusterrole system:node-bootstrapper"
  shell: kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --group=system:bootstrappers
- name: "自动批准 system:bootstrappers 组用户 TLS bootstrapping 首次申请证书的 CSR 请求"
  shell: kubectl create clusterrolebinding auto-approve-csrs-for-group --clusterrole=system:certificates.k8s.io:certificatesigningrequests:nodeclient --group=system:bootstrappers 
- name: "自动批准 system:nodes 组用户更新 kubelet 自身与 apiserver 通讯证书的 CSR 请求"
  shell: kubectl create clusterrolebinding node-client-cert-renewal --clusterrole=system:certificates.k8s.io:certificatesigningrequests:selfnodeclient --group=system:nodes
- name: "创建自动批准相关 CSR 请求的 ClusterRole"
  shell: kubectl create clusterrole approve-node-server-renewal-csr --verb=create --resource=certificatesigningrequests/selfnodeserver --resource-name=certificates.k8s.io
- name: "自动批准 system:nodes 组用户更新 kubelet 10250 api 端口证书的 CSR 请求"
  shell: kubectl create clusterrolebinding node-server-cert-renewal --clusterrole=system:certificates.k8s.io:certificatesigningrequests:selfnodeserver --group=system:nodes
- name: "暂停1分钟"
  pause: minutes=1
- name: "获取Pending状态的csr"
  shell: kubectl get csr| grep Pending | awk '{print $1}'|tr '\n' ' '
  register: approve_csr
- name: "approve csr"
  shell: kubectl certificate approve {{ approve_csr.stdout }}
- name: "删除bootstrap-token文件"
  file:
    path: "/etc/kubernetes/pki/token"
    state: absent
- name: "为master打污点"
  shell: "kubectl taint nodes {{ item }} node-role.kubernetes.io/master=:NoSchedule"
  with_items:
    - "{{ groups['master'] }}"
- name: "为master打标签"
  shell: "kubectl label nodes {{ item }} node-role.kubernetes.io/master="
  with_items:
    - "{{ groups['master'] }}"
- name: "拷贝kube-proxy.yaml"
  template:
    src: "kube-proxy.yaml.j2"
    dest: "/tmp/kube-proxy.yaml"
- name: "部署kube-proxy"
  shell: "kubectl apply -f /tmp/kube-proxy.yaml"
- name: "下载calico部署文件"
  get_url:
    url: "https://docs.projectcalico.org/v3.10/manifests/calico.yaml"
    dest: /tmp/
- name: "修改calico-etcd部署文件"
  replace:
    path: "/tmp/calico.yaml"
    regexp: "192.168.0.0/16"
    replace: "{{ pod_ip_range }}"
- name: "部署calico"
  shell: "kubectl apply -f /tmp/calico.yaml"