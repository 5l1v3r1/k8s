- name: "安装依赖"
  yum:
    name: "{{ item.line }}"
    state: installed
  with_items:
    - {line: 'libnetfilter_conntrack-devel'}
    - {line: 'libnetfilter_conntrack'}
    - {line: 'conntrack-tools'}
    - {line: 'socat'}
- name: "创建kubelet数据目录"
  file:
    path: "{{ item.line }}"
    state: directory
  with_items:
    - {line: "{{ kube_data_dir }}/kubelet"}
- name: "安装kube-node"
  get_url:
    url: "{{ item.line }}"
    dest: /usr/bin/
  with_items:
    - { line: "{{ download_url }}/kubelet"}
    - { line: "{{ download_url }}/kube-proxy"}
  tags: install_kube-node
- name: "添加执行权限"
  file:
    dest: "{{ item.line }}"
    mode: 0755
  with_items:
    - {line: '/usr/bin/kubelet'}
    - {line: '/usr/bin/kube-proxy'}
  tags: install_kubelet
- name: "分发node证书文件"
  copy:
    src: "{{ item.line }}"
    dest: "/etc/kubernetes/ssl/"
  with_items:
    - {line: "{{ ssl_dir }}/ca.pem"}
    - {line: "{{ ssl_dir }}/ca.key"}
    - {line: "{{ ssl_dir }}/kube-proxy.pem"}
    - {line: "{{ ssl_dir }}/kube-proxy.key"}
- name: "生成bootstrap token id"
  shell: openssl rand -hex 6
  register: token_id
- debug:
    msg: "{{ token_id }}"
- name: "生成bootstrap token secret"
  shell: openssl rand -hex 16
  register: token_secret
- debug:
    msg: "{{ token_secret }}"
- name: "分发kubeconfig"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - {src: "bootstrap.kubeconfig.j2",dest: "{{ kube_dir }}/bootstrap.kubeconfig" }
  tags: kubeconfig
- name: "创建node节点配置文件"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - {src: "kubelet.j2",dest: "{{ kube_dir }}/apiserver" }
    - {src: "kubeletconfig.yaml.j2",dest: "{{ kube_dir }}/kubeletconfig.yaml" }
    - {src: "proxy.j2",dest: "{{ kube_dir }}/proxy" }
  tags: kube-node-config
- name: "创建node节点systemd文件"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - {src: "kubelet.service.j2",dest: "/usr/lib/systemd/system/kubelet.service" }
    - {src: "kube-proxy.service.j2",dest: "/usr/lib/systemd/system/kube-proxy.service" }
  tags: kube-node-service

- name: "启动node节点服务"
  systemd:
    name: "{{ item.line }}"
    enabled: yes
    daemon_reload: yes
    state: restarted
  with_items:
    - {line: 'kubelet'}
    - {line: 'kube-proxy'}
  tags: restart_node

